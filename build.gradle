import de.gesellix.gradle.docker.tasks.DockerInfoTask
import de.gesellix.gradle.docker.tasks.DockerPingTask
import de.gesellix.gradle.docker.tasks.DockerVersionTask

import static groovy.json.JsonOutput.prettyPrint
import static groovy.json.JsonOutput.toJson

buildscript {
    ext {
        springBootVersion = '1.3.3.RELEASE'
    }
    repositories {
        mavenCentral()
        jcenter()
        maven { url "https://plugins.gradle.org/m2/" }
    }
    dependencies {
        classpath "nl.javadude.gradle.plugins:license-gradle-plugin:0.11.0"
        classpath "org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}"
        classpath "de.gesellix:gradle-docker-plugin:2016-02-08T22-29-47"
    }
}

allprojects {
    apply plugin: "de.gesellix.docker"

    docker {
        dockerHost = System.env.DOCKER_HOST ?: 'https://192.168.99.100:2376'
        certPath = "${System.getProperty('user.home')}/.docker/machine/machines/default"
    }

    repositories {
        mavenCentral()
        maven { url "https://repo.spring.io/snapshot" }
        maven { url "https://repo.spring.io/milestone" }
        jcenter()
    }
}

subprojects {
    apply plugin: 'java'
    apply plugin: 'spring-boot'
    apply plugin: "com.github.hierynomus.license"

    license {
        skipExistingHeaders = true
        header rootProject.file('LICENSE')
        includes(["**/*.java"])
        mapping {
            java = 'SLASHSTAR_STYLE'
        }
    }

    group = 'de.qaware.cloud.nativ.zwitscher'
    version = '1.0.0'

    sourceCompatibility = 1.8
    targetCompatibility = 1.8

    dependencyManagement {
        imports {
            mavenBom "org.springframework.cloud:spring-cloud-dependencies:Brixton.BUILD-SNAPSHOT"
        }
    }

    dependencies {
        testCompile('org.springframework.boot:spring-boot-starter-test')
        testCompile 'junit:junit:4.12'
        testCompile 'org.hamcrest:hamcrest-library:1.3'
    }

    springBoot {
        executable = true
    }

    test {
        reports {
            junitXml.enabled = false
            html.enabled = true
        }
    }
}

task dockerPing(type: DockerPingTask, group: 'Docker') {
    doLast {
        println prettyPrint(toJson(result.content))
    }
}

task dockerInfo(type: DockerInfoTask, group: 'Docker') {
    doLast {
        println prettyPrint(toJson(info))
    }
}

task dockerVersion(type: DockerVersionTask, group: 'Docker') {
    doLast {
        println prettyPrint(toJson(version))
    }
}

task wrapper(type: Wrapper) {
    gradleVersion = '2.11'
}
